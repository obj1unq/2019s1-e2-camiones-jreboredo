import cosas.*

test "el nivel de peligrosidad de Knight Rider es 10" {
	assert.equals(10, knightRider.nivelPeligrosidad())
}
test "el Peso de Knight Rider es 500" {
	assert.equals(500, knightRider.peso())
}
test "el nivel de peligrosidad de bumblebee transformado en auto es 15" {
	assert.equals(15, bumblebee.nivelPeligrosidad())
}
test "el nivel de peligrosidad de bumblebee transformado en autobot es 30" {
	bumblebee.transformar()
	assert.equals(30, bumblebee.nivelPeligrosidad())
}
test "el Peso de bumblebee es 800" {
	assert.equals(800, bumblebee.peso())
}
test "el Peso de un paquete de ladrillos de 20 es 40" {
	paqueteDeLadrillos.cantidad(20)
	assert.equals(40, paqueteDeLadrillos.peso())
}
test "peligrosidad de Ladrillos es 2" {
	assert.equals(2, paqueteDeLadrillos.nivelPeligrosidad())
}
test "el Peso de un paquete de arena previamente configurado es 10kg y luego varia a ser 20" {
	arena.peso(10)
	assert.equals(10, arena.peso())
	arena.peso(20)
	assert.notEquals(10, arena.peso())
	assert.equals(20, arena.peso())
}
test "peligrosidad de la arena es 1" {
	assert.equals(1, arena.nivelPeligrosidad())
}
test "peligrosidad de la bateria sin misiles es 0" {
	bateria.sacarMisiles()
	assert.equals(0, bateria.nivelPeligrosidad())
}
test "el peso de la bateria sin misiles es 200" {
	bateria.sacarMisiles()
	assert.equals(200, bateria.peso())
}
test "el peso de la bateria con misiles es 300" {
	bateria.equiparMisiles()
	assert.equals(300, bateria.peso())
}
test "peligrosidad de la bateria con misiles es 100" {
	bateria.equiparMisiles()
	assert.equals(100, bateria.nivelPeligrosidad())
}
test "peligrosidad de un contenedor vacio  es 0" {
	assert.equals(0, contenedor.nivelPeligrosidad())
}
test "peso de un contenedor vacio es 100" {
	assert.equals(100, contenedor.peso())
}
test "peso de un contenedor  es 600" {
	contenedor.agregar(knightRider)
	assert.equals(600, contenedor.peso())
}
test "peligrosidad de un contenedor con un knightRider es 10" {
	contenedor.agregar(knightRider)
	assert.equals(10, contenedor.nivelPeligrosidad())
}
test "peso de un contenedor con un knightRider  es 600" {
	contenedor.agregar(knightRider)
	assert.equals(600, contenedor.peso())
}
test "peligrosidad de un contenedor con un knightRider + un bumbble sin transformar es 15" {
	contenedor.agregar(knightRider)
	contenedor.agregar(bumblebee)
	assert.equals(15, contenedor.nivelPeligrosidad())
}
test "peso de un contenedor con un knightRider  un bumbble  es 1400" {
	contenedor.agregar(knightRider)
	contenedor.agregar(bumblebee)
	assert.equals(1400, contenedor.peso())
}
test "peligrosidad de un residuo es 200" {
	assert.equals(200, residuo.nivelPeligrosidad())
}
test "peso de un residuo es 200" {
	residuo.peso(200)
	assert.equals(200, residuo.peso())
}
test "peso de un residuo es 200 y luego cambia a 100" {
	residuo.peso(200)
	assert.equals(200, residuo.peso())
	residuo.peso(100)
	assert.notEquals(200, residuo.peso())
	assert.equals(100, residuo.peso())
}
test "peso de un knightRider embalado es 500" {
	embalaje.embalar(knightRider)
	assert.equals(500, embalaje.peso())
}
test "peligrosidad de un knightRider embalado es 5" {
	embalaje.embalar(knightRider)
	assert.equals(5, embalaje.nivelPeligrosidad())
}
test "Los bultos de bumbumble es 2" {
	assert.equals(2, bumblebee.bultos())
}
test "Los bultos de bumbumble no es 1" {
	assert.notEquals(1, bumblebee.bultos())
}
test "Los bultos de KnightRider es 1" {
	assert.equals(1, knightRider.bultos())
}
test "Los bultos de bumbumble no es 2" {
	assert.notEquals(2, knightRider.bultos())
}
test "Los bultos de arena  es 1" {
	assert.equals(1, arena.bultos())
}
test "Los bultos de arena  no es 2" {
	assert.notEquals(2, arena.bultos())
}
test "Los bultos de residuos  es 1" {
	assert.equals(1, residuo.bultos())
}
test "Los bultos de residuos  no es 2" {
	assert.notEquals(2, residuo.bultos())
}
test "Los bultos de embalaje es 2" {
	assert.equals(2, embalaje.bultos())
}
test "Los bultos de embalaje no es 1" {
	assert.notEquals(1, embalaje.bultos())
}
test "Los bultos de ladrillo con cantidad 10 es 1" {
	paqueteDeLadrillos.cantidad(10)
	assert.equals(1, paqueteDeLadrillos.bultos())
}
test "Los bultos de ladrillo con cantidad 10 no tiene que ser 1"  {
	paqueteDeLadrillos.cantidad(10)
	assert.notEquals(2, paqueteDeLadrillos.bultos())
}
test "Los bultos de ladrillo con cantidad 101 es 2" {
	paqueteDeLadrillos.cantidad(101)
	assert.equals(2, paqueteDeLadrillos.bultos())
}
test "Los bultos de ladrillo con cantidad 101 no tiene que ser 3"  {
	paqueteDeLadrillos.cantidad(101)
	assert.notEquals(3, paqueteDeLadrillos.bultos())
}
test "Los bultos de ladrillo con cantidad 299 es 2" {
	paqueteDeLadrillos.cantidad(299)
	assert.equals(2, paqueteDeLadrillos.bultos())
}
test "Los bultos de ladrillo con cantidad 299 no tiene que ser 3"  {
	paqueteDeLadrillos.cantidad(299)
	assert.notEquals(3, paqueteDeLadrillos.bultos())
}
test "Los bultos de ladrillo con cantidad 301 es 3" {
	paqueteDeLadrillos.cantidad(301)
	assert.equals(3, paqueteDeLadrillos.bultos())
}
test "Los bultos de ladrillo con cantidad 301 no tiene que ser 2"  {
	paqueteDeLadrillos.cantidad(301)
	assert.notEquals(2, paqueteDeLadrillos.bultos())
}
test "Los bultos de bateria sin misiles  es 1" {
	bateria.sacarMisiles()
	assert.equals(1, bateria.bultos())
}
test "Los bultos de bateria sin misiles no es 2" {
	bateria.sacarMisiles()
	assert.notEquals(2, bateria.bultos())
}
test "Los bultos de bateria sin misiles  es 2" {
	bateria.equiparMisiles()
	assert.equals(2, bateria.bultos())
}
test "Los bultos de bateria sin misiles no es 1" {
	bateria.equiparMisiles()
	assert.notEquals(1, bateria.bultos())
}
test "Los bultos de un contenedor vacios  es 1" {
	bateria.equiparMisiles()
	assert.equals(1, contenedor.bultos())
}
test "Los bultos de un contenedor vacios no es 2" {
	bateria.equiparMisiles()
	assert.notEquals(2, contenedor.bultos())
}
test "Los bultos de un contenedor con un kinkgrider y arena  es 3" {
	contenedor.agregar(knightRider)
	contenedor.agregar(arena)
	assert.equals(3, contenedor.bultos())
}
test "Los bultos de un contenedor con un kinkgrider y arenano es 2" {
	contenedor.agregar(knightRider)
	contenedor.agregar(arena)
	assert.notEquals(2, contenedor.bultos())
}
test "Reaccion de carga de Bumbumblee" {
	assert.that(bumblebee.esAuto())
	bumblebee.reaccionDeCarga()
	assert.notThat(bumblebee.esAuto())
}
test "Reaccion de carga de ladrillos" {
	paqueteDeLadrillos.cantidad(10)
	assert.equals(10,paqueteDeLadrillos.cantidad())
	paqueteDeLadrillos.reaccionDeCarga()
	assert.equals(22,paqueteDeLadrillos.cantidad())
}
test "Reaccion de carga de arena" {
	assert.equals(0,arena.peso())
	arena.reaccionDeCarga()
	assert.equals(20,arena.peso())
}
test "Reaccion de carga de bateria de Misiles" {
	assert.notThat(bateria.misiles())
	bateria.reaccionDeCarga()
	assert.that(bateria.misiles())
}
test "Reaccion de carga de contenedor con arena" {
	contenedor.agregar(arena)
	assert.equals(100, contenedor.peso())
	contenedor.reaccionDeCarga()
	assert.equals(120, contenedor.peso())
}
test "Reaccion de carga de residuos" {
	assert.equals(0, residuo.peso())
	residuo.reaccionDeCarga()
	assert.equals(15, residuo.peso())
}